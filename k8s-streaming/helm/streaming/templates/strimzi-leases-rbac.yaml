## templates/strimzi-leases-rbac.yaml
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  name: strimzi-cluster-operator-leases
#  namespace: streaming
#  labels:
#    app.kubernetes.io/managed-by: "Helm"
#    app.kubernetes.io/instance: "streaming"
#  annotations:
#    meta.helm.sh/release-name: "streaming"
#    meta.helm.sh/release-namespace: "streaming"
#rules:
#  - apiGroups: ["coordination.k8s.io"]
#    resources: ["leases","leases/status","kafkausers",
#                "kafkatopics","kafkaclusters","kafkas","zookeeperclusters",
#                "zookeeperusers","zookeepers","zookeepertopics","zookeeperclusters/status","zookeeperusers/status",
#                "zookeepers/status","zookeepertopics/status"]
#    verbs: ["get","list","watch","create","update","patch"]
#
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  name: strimzi-cluster-operator
#  namespace: streaming
#  labels:
#    app.kubernetes.io/managed-by: "Helm"
#    app.kubernetes.io/instance: "streaming"
#  annotations:
#    meta.helm.sh/release-name: "streaming"
#    meta.helm.sh/release-namespace: "streaming"
#subjects:
#  - kind: ServiceAccount
#    name: strimzi-cluster-operator
#    namespace: streaming
#roleRef:
#  kind: ClusterRole
#  name: strimzi-cluster-operator-leases
#  apiGroup: rbac.authorization.k8s.io
# apply this (either via kubectl or drop into your chart under templates/)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: strimzi-operator-cluster-admin
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: streaming
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
